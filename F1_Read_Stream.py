import oci
import time
import struct
import oracledb
import datetime
import random
import string
from base64 import b64decode

un = "ORBR"
pw = "1962250gtCal^"
dsn = "f122adw_low" 
wallet_dir = "/Users/miljacks/Oracle Content - Accounts/Oracle Content/Miles/09_OPENMCT/ESPORTS_1.9/Wallet_F122ADW"
#wallet_dir = "/home/opc/sportsdb"
wp = "1962250gtCal^"

ociMessageEndpoint = "https://cell-1.streaming.us-ashburn-1.oci.oraclecloud.com"  
ociStreamOcid = "ocid1.stream.oc1.iad.amaaaaaapwneysaaeldqecjioomcl6672hmwsmt6jzpizdg367jog66nrrka"  
ociConfigFilePath = "/Users/miljacks/.oci/config"  
ociProfileName = "DEFAULT"  


def byteToText(message,target_cursor):
    if message[5:6] == b'\x00':
        #print("Packet 0")

        # convert to string
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'ffffffHHHHHHffffff'
        byteCode = byteCode + 'ffffffffffffffffffffffffffffff'

        unpacked = struct.unpack(byteCode, message[0:1464])
        unpacked_str = ",".join(map(str,unpacked))
        #print(unpacked_str,  file=open('data/0.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_MOTION (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_WORLDPOSITIONX, M_WORLDPOSITIONY, M_WORLDPOSITIONZ, M_WORLDVELOCITYX, M_WORLDVELOCITYY, M_WORLDVELOCITYZ, M_WORLDFORWARDDIRX, M_WORLDFORWARDDIRY, M_WORLDFORWARDDIRZ, M_WORLDRIGHTDIRX, M_WORLDRIGHTDIRY, M_WORLDRIGHTDIRZ, M_GFORCELATERAL, M_GFORCELONGITUDINAL, M_GFORCEVERTICAL, M_YAW, M_PITCH, M_ROLL, M_SUSPENSIONPOSITION_RL, M_SUSPENSIONPOSITION_RR, M_SUSPENSIONPOSITION_FL, M_SUSPENSIONPOSITION_FR, M_SUSPENSIONVELOCITY_RL, M_SUSPENSIONVELOCITY_RR, M_SUSPENSIONVELOCITY_FL, M_SUSPENSIONVELOCITY_FR, M_SUSPENSIONACCELERATION_RL, M_SUSPENSIONACCELERATION_RR, M_SUSPENSIONACCELERATION_FL, M_SUSPENSIONACCELERATION_FR, M_WHEELSPEED_RL, M_WHEELSPEED_RR, M_WHEELSPEED_FL, M_WHEELSPEED_FR, M_WHEELSLIP_RL, M_WHEELSLIP_RR, M_WHEELSLIP_FL, M_WHEELSLIP_FR, M_LOCALVELOCITYX, M_LOCALVELOCITYY, M_LOCALVELOCITYZ, M_ANGULARVELOCITYX, M_ANGULARVELOCITYY, M_ANGULARVELOCITYZ, M_ANGULARACCELERATIONX, M_ANGULARACCELERATIONY, M_ANGULARACCELERATIONZ, M_FRONTWHEELSANGLE) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :47, :48, :49, :50, :51, :52, :53, :54, :55, :56, :57, :58)", row[0:10]+row[(10+(int(row[8])*18)):(10+((int(row[8])+1)*18))]+row[406:436])
        return unpacked_str

    elif message[5:6] == b'\x01':
        #print("Packet 1")
        header = struct.unpack('<HBBBBQfIBB', message[0:24])
        packet_part_1 = struct.unpack('<BbbBHBbBHHBBBBBB', message[24:43])
        packetMarshal = struct.unpack('<fbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfbfb', message[43:148])
        packet_part_2 = struct.unpack('<BBB', message[148:151])
        weatherForecastBitString = '<'
        for forecast in range(56): # -1?
            weatherForecastBitString = weatherForecastBitString + 'BBBbbbbB'
        weatherPacket = struct.unpack(weatherForecastBitString, message[151:599])
        packet_part_3 = struct.unpack('<BBIIIBBBBBBBBBBBBBBIB', message[599:632])
        unpacked = header + packet_part_1 + packetMarshal + packet_part_2 + weatherPacket + packet_part_3
        unpacked_str = ",".join(map(str,unpacked))
        #print(unpacked_str,  file=open('data/1.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_SESSION (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_WEATHER, M_TRACKTEMPERATURE, M_AIRTEMPERATURE, M_TOTALLAPS, M_TRACKLENGTH, M_SESSIONTYPE, M_TRACKID, M_FORMULA, M_SESSIONTIMELEFT, M_SESSIONDURATION, M_PITSPEEDLIMIT, M_GAMEPAUSED, M_ISSPECTATING, M_SPECTATORCARINDEX, M_SLIPRONATIVESUPPORT, M_NUMMARSHALZONES, M_ZONESTART_1, M_ZONEFLAG_1, M_ZONESTART_2, M_ZONEFLAG_2, M_ZONESTART_3, M_ZONEFLAG_3, M_ZONESTART_4, M_ZONEFLAG_4, M_ZONESTART_5, M_ZONEFLAG_5, M_ZONESTART_6, M_ZONEFLAG_6, M_ZONESTART_7, M_ZONEFLAG_7, M_ZONESTART_8, M_ZONEFLAG_8, M_ZONESTART_9, M_ZONEFLAG_9, M_ZONESTART_10, M_ZONEFLAG_10, M_ZONESTART_11, M_ZONEFLAG_11, M_ZONESTART_12, M_ZONEFLAG_12, M_ZONESTART_13, M_ZONEFLAG_13, M_ZONESTART_14, M_ZONEFLAG_14, M_ZONESTART_15, M_ZONEFLAG_15, M_ZONESTART_16, M_ZONEFLAG_16, M_ZONESTART_17, M_ZONEFLAG_17, M_ZONESTART_18, M_ZONEFLAG_18, M_ZONESTART_19, M_ZONEFLAG_19, M_ZONESTART_20, M_ZONEFLAG_20, M_ZONESTART_21, M_ZONEFLAG_21, M_SAFETYCARSTATUS, M_NETWORKGAME, M_NUMWEATHERFORECASTSAMPLES, M_SESSIONTYPE_1, M_TIMEOFFSET_1, M_WEATHER_1, M_TRACKTEMPERATURE_1, M_TRACKTEMPERATURECHANGE_1, M_AIRTEMPERATURE_1, M_AIRTEMPERATURECHANGE_1, M_RAINPERCENTAGE_1, M_SESSIONTYPE_2, M_TIMEOFFSET_2, M_WEATHER_2, M_TRACKTEMPERATURE_2, M_TRACKTEMPERATURECHANGE_2, M_AIRTEMPERATURE_2, M_AIRTEMPERATURECHANGE_2, M_RAINPERCENTAGE_2, M_SESSIONTYPE_3, M_TIMEOFFSET_3, M_WEATHER_3, M_TRACKTEMPERATURE_3, M_TRACKTEMPERATURECHANGE_3, M_AIRTEMPERATURE_3, M_AIRTEMPERATURECHANGE_3, M_RAINPERCENTAGE_3, M_SESSIONTYPE_4, M_TIMEOFFSET_4, M_WEATHER_4, M_TRACKTEMPERATURE_4, M_TRACKTEMPERATURECHANGE_4, M_AIRTEMPERATURE_4, M_AIRTEMPERATURECHANGE_4, M_RAINPERCENTAGE_4, M_SESSIONTYPE_5, M_TIMEOFFSET_5, M_WEATHER_5, M_TRACKTEMPERATURE_5, M_TRACKTEMPERATURECHANGE_5, M_AIRTEMPERATURE_5, M_AIRTEMPERATURECHANGE_5, M_RAINPERCENTAGE_5, M_SESSIONTYPE_6, M_TIMEOFFSET_6, M_WEATHER_6, M_TRACKTEMPERATURE_6, M_TRACKTEMPERATURECHANGE_6, M_AIRTEMPERATURE_6, M_AIRTEMPERATURECHANGE_6, M_RAINPERCENTAGE_6, M_SESSIONTYPE_7, M_TIMEOFFSET_7, M_WEATHER_7, M_TRACKTEMPERATURE_7, M_TRACKTEMPERATURECHANGE_7, M_AIRTEMPERATURE_7, M_AIRTEMPERATURECHANGE_7, M_RAINPERCENTAGE_7, M_SESSIONTYPE_8, M_TIMEOFFSET_8, M_WEATHER_8, M_TRACKTEMPERATURE_8, M_TRACKTEMPERATURECHANGE_8, M_AIRTEMPERATURE_8, M_AIRTEMPERATURECHANGE_8, M_RAINPERCENTAGE_8, M_SESSIONTYPE_9, M_TIMEOFFSET_9, M_WEATHER_9, M_TRACKTEMPERATURE_9, M_TRACKTEMPERATURECHANGE_9, M_AIRTEMPERATURE_9, M_AIRTEMPERATURECHANGE_9, M_RAINPERCENTAGE_9, M_SESSIONTYPE_10, M_TIMEOFFSET_10, M_WEATHER_10, M_TRACKTEMPERATURE_10, M_TRACKTEMPERATURECHANGE_10, M_AIRTEMPERATURE_10, M_AIRTEMPERATURECHANGE_10, M_RAINPERCENTAGE_10, M_SESSIONTYPE_11, M_TIMEOFFSET_11, M_WEATHER_11, M_TRACKTEMPERATURE_11, M_TRACKTEMPERATURECHANGE_11, M_AIRTEMPERATURE_11, M_AIRTEMPERATURECHANGE_11, M_RAINPERCENTAGE_11, M_SESSIONTYPE_12, M_TIMEOFFSET_12, M_WEATHER_12, M_TRACKTEMPERATURE_12, M_TRACKTEMPERATURECHANGE_12, M_AIRTEMPERATURE_12, M_AIRTEMPERATURECHANGE_12, M_RAINPERCENTAGE_12, M_SESSIONTYPE_13, M_TIMEOFFSET_13, M_WEATHER_13, M_TRACKTEMPERATURE_13, M_TRACKTEMPERATURECHANGE_13, M_AIRTEMPERATURE_13, M_AIRTEMPERATURECHANGE_13, M_RAINPERCENTAGE_13, M_SESSIONTYPE_14, M_TIMEOFFSET_14, M_WEATHER_14, M_TRACKTEMPERATURE_14, M_TRACKTEMPERATURECHANGE_14, M_AIRTEMPERATURE_14, M_AIRTEMPERATURECHANGE_14, M_RAINPERCENTAGE_14, M_SESSIONTYPE_15, M_TIMEOFFSET_15, M_WEATHER_15, M_TRACKTEMPERATURE_15, M_TRACKTEMPERATURECHANGE_15, M_AIRTEMPERATURE_15, M_AIRTEMPERATURECHANGE_15, M_RAINPERCENTAGE_15, M_SESSIONTYPE_16, M_TIMEOFFSET_16, M_WEATHER_16, M_TRACKTEMPERATURE_16, M_TRACKTEMPERATURECHANGE_16, M_AIRTEMPERATURE_16, M_AIRTEMPERATURECHANGE_16, M_RAINPERCENTAGE_16, M_SESSIONTYPE_17, M_TIMEOFFSET_17, M_WEATHER_17, M_TRACKTEMPERATURE_17, M_TRACKTEMPERATURECHANGE_17, M_AIRTEMPERATURE_17, M_AIRTEMPERATURECHANGE_17, M_RAINPERCENTAGE_17, M_SESSIONTYPE_18, M_TIMEOFFSET_18, M_WEATHER_18, M_TRACKTEMPERATURE_18, M_TRACKTEMPERATURECHANGE_18, M_AIRTEMPERATURE_18, M_AIRTEMPERATURECHANGE_18, M_RAINPERCENTAGE_18, M_SESSIONTYPE_19, M_TIMEOFFSET_19, M_WEATHER_19, M_TRACKTEMPERATURE_19, M_TRACKTEMPERATURECHANGE_19, M_AIRTEMPERATURE_19, M_AIRTEMPERATURECHANGE_19, M_RAINPERCENTAGE_19, M_SESSIONTYPE_20, M_TIMEOFFSET_20, M_WEATHER_20, M_TRACKTEMPERATURE_20, M_TRACKTEMPERATURECHANGE_20, M_AIRTEMPERATURE_20, M_AIRTEMPERATURECHANGE_20, M_RAINPERCENTAGE_20, M_SESSIONTYPE_21, M_TIMEOFFSET_21, M_WEATHER_21, M_TRACKTEMPERATURE_21, M_TRACKTEMPERATURECHANGE_21, M_AIRTEMPERATURE_21, M_AIRTEMPERATURECHANGE_21, M_RAINPERCENTAGE_21, M_SESSIONTYPE_22, M_TIMEOFFSET_22, M_WEATHER_22, M_TRACKTEMPERATURE_22, M_TRACKTEMPERATURECHANGE_22, M_AIRTEMPERATURE_22, M_AIRTEMPERATURECHANGE_22, M_RAINPERCENTAGE_22, M_SESSIONTYPE_23, M_TIMEOFFSET_23, M_WEATHER_23, M_TRACKTEMPERATURE_23, M_TRACKTEMPERATURECHANGE_23, M_AIRTEMPERATURE_23, M_AIRTEMPERATURECHANGE_23, M_RAINPERCENTAGE_23, M_SESSIONTYPE_24, M_TIMEOFFSET_24, M_WEATHER_24, M_TRACKTEMPERATURE_24, M_TRACKTEMPERATURECHANGE_24, M_AIRTEMPERATURE_24, M_AIRTEMPERATURECHANGE_24, M_RAINPERCENTAGE_24, M_SESSIONTYPE_25, M_TIMEOFFSET_25, M_WEATHER_25, M_TRACKTEMPERATURE_25, M_TRACKTEMPERATURECHANGE_25, M_AIRTEMPERATURE_25, M_AIRTEMPERATURECHANGE_25, M_RAINPERCENTAGE_25, M_SESSIONTYPE_26, M_TIMEOFFSET_26, M_WEATHER_26, M_TRACKTEMPERATURE_26, M_TRACKTEMPERATURECHANGE_26, M_AIRTEMPERATURE_26, M_AIRTEMPERATURECHANGE_26, M_RAINPERCENTAGE_26, M_SESSIONTYPE_27, M_TIMEOFFSET_27, M_WEATHER_27, M_TRACKTEMPERATURE_27, M_TRACKTEMPERATURECHANGE_27, M_AIRTEMPERATURE_27, M_AIRTEMPERATURECHANGE_27, M_RAINPERCENTAGE_27, M_SESSIONTYPE_28, M_TIMEOFFSET_28, M_WEATHER_28, M_TRACKTEMPERATURE_28, M_TRACKTEMPERATURECHANGE_28, M_AIRTEMPERATURE_28, M_AIRTEMPERATURECHANGE_28, M_RAINPERCENTAGE_28, M_SESSIONTYPE_29, M_TIMEOFFSET_29, M_WEATHER_29, M_TRACKTEMPERATURE_29, M_TRACKTEMPERATURECHANGE_29, M_AIRTEMPERATURE_29, M_AIRTEMPERATURECHANGE_29, M_RAINPERCENTAGE_29, M_SESSIONTYPE_30, M_TIMEOFFSET_30, M_WEATHER_30, M_TRACKTEMPERATURE_30, M_TRACKTEMPERATURECHANGE_30, M_AIRTEMPERATURE_30, M_AIRTEMPERATURECHANGE_30, M_RAINPERCENTAGE_30, M_SESSIONTYPE_31, M_TIMEOFFSET_31, M_WEATHER_31, M_TRACKTEMPERATURE_31, M_TRACKTEMPERATURECHANGE_31, M_AIRTEMPERATURE_31, M_AIRTEMPERATURECHANGE_31, M_RAINPERCENTAGE_31, M_SESSIONTYPE_32, M_TIMEOFFSET_32, M_WEATHER_32, M_TRACKTEMPERATURE_32, M_TRACKTEMPERATURECHANGE_32, M_AIRTEMPERATURE_32, M_AIRTEMPERATURECHANGE_32, M_RAINPERCENTAGE_32, M_SESSIONTYPE_33, M_TIMEOFFSET_33, M_WEATHER_33, M_TRACKTEMPERATURE_33, M_TRACKTEMPERATURECHANGE_33, M_AIRTEMPERATURE_33, M_AIRTEMPERATURECHANGE_33, M_RAINPERCENTAGE_33, M_SESSIONTYPE_34, M_TIMEOFFSET_34, M_WEATHER_34, M_TRACKTEMPERATURE_34, M_TRACKTEMPERATURECHANGE_34, M_AIRTEMPERATURE_34, M_AIRTEMPERATURECHANGE_34, M_RAINPERCENTAGE_34, M_SESSIONTYPE_35, M_TIMEOFFSET_35, M_WEATHER_35, M_TRACKTEMPERATURE_35, M_TRACKTEMPERATURECHANGE_35, M_AIRTEMPERATURE_35, M_AIRTEMPERATURECHANGE_35, M_RAINPERCENTAGE_35, M_SESSIONTYPE_36, M_TIMEOFFSET_36, M_WEATHER_36, M_TRACKTEMPERATURE_36, M_TRACKTEMPERATURECHANGE_36, M_AIRTEMPERATURE_36, M_AIRTEMPERATURECHANGE_36, M_RAINPERCENTAGE_36, M_SESSIONTYPE_37, M_TIMEOFFSET_37, M_WEATHER_37, M_TRACKTEMPERATURE_37, M_TRACKTEMPERATURECHANGE_37, M_AIRTEMPERATURE_37, M_AIRTEMPERATURECHANGE_37, M_RAINPERCENTAGE_37, M_SESSIONTYPE_38, M_TIMEOFFSET_38, M_WEATHER_38, M_TRACKTEMPERATURE_38, M_TRACKTEMPERATURECHANGE_38, M_AIRTEMPERATURE_38, M_AIRTEMPERATURECHANGE_38, M_RAINPERCENTAGE_38, M_SESSIONTYPE_39, M_TIMEOFFSET_39, M_WEATHER_39, M_TRACKTEMPERATURE_39, M_TRACKTEMPERATURECHANGE_39, M_AIRTEMPERATURE_39, M_AIRTEMPERATURECHANGE_39, M_RAINPERCENTAGE_39, M_SESSIONTYPE_40, M_TIMEOFFSET_40, M_WEATHER_40, M_TRACKTEMPERATURE_40, M_TRACKTEMPERATURECHANGE_40, M_AIRTEMPERATURE_40, M_AIRTEMPERATURECHANGE_40, M_RAINPERCENTAGE_40, M_SESSIONTYPE_41, M_TIMEOFFSET_41, M_WEATHER_41, M_TRACKTEMPERATURE_41, M_TRACKTEMPERATURECHANGE_41, M_AIRTEMPERATURE_41, M_AIRTEMPERATURECHANGE_41, M_RAINPERCENTAGE_41, M_SESSIONTYPE_42, M_TIMEOFFSET_42, M_WEATHER_42, M_TRACKTEMPERATURE_42, M_TRACKTEMPERATURECHANGE_42, M_AIRTEMPERATURE_42, M_AIRTEMPERATURECHANGE_42, M_RAINPERCENTAGE_42, M_SESSIONTYPE_43, M_TIMEOFFSET_43, M_WEATHER_43, M_TRACKTEMPERATURE_43, M_TRACKTEMPERATURECHANGE_43, M_AIRTEMPERATURE_43, M_AIRTEMPERATURECHANGE_43, M_RAINPERCENTAGE_43, M_SESSIONTYPE_44, M_TIMEOFFSET_44, M_WEATHER_44, M_TRACKTEMPERATURE_44, M_TRACKTEMPERATURECHANGE_44, M_AIRTEMPERATURE_44, M_AIRTEMPERATURECHANGE_44, M_RAINPERCENTAGE_44, M_SESSIONTYPE_45, M_TIMEOFFSET_45, M_WEATHER_45, M_TRACKTEMPERATURE_45, M_TRACKTEMPERATURECHANGE_45, M_AIRTEMPERATURE_45, M_AIRTEMPERATURECHANGE_45, M_RAINPERCENTAGE_45, M_SESSIONTYPE_46, M_TIMEOFFSET_46, M_WEATHER_46, M_TRACKTEMPERATURE_46, M_TRACKTEMPERATURECHANGE_46, M_AIRTEMPERATURE_46, M_AIRTEMPERATURECHANGE_46, M_RAINPERCENTAGE_46, M_SESSIONTYPE_47, M_TIMEOFFSET_47, M_WEATHER_47, M_TRACKTEMPERATURE_47, M_TRACKTEMPERATURECHANGE_47, M_AIRTEMPERATURE_47, M_AIRTEMPERATURECHANGE_47, M_RAINPERCENTAGE_47, M_SESSIONTYPE_48, M_TIMEOFFSET_48, M_WEATHER_48, M_TRACKTEMPERATURE_48, M_TRACKTEMPERATURECHANGE_48, M_AIRTEMPERATURE_48, M_AIRTEMPERATURECHANGE_48, M_RAINPERCENTAGE_48, M_SESSIONTYPE_49, M_TIMEOFFSET_49, M_WEATHER_49, M_TRACKTEMPERATURE_49, M_TRACKTEMPERATURECHANGE_49, M_AIRTEMPERATURE_49, M_AIRTEMPERATURECHANGE_49, M_RAINPERCENTAGE_49, M_SESSIONTYPE_50, M_TIMEOFFSET_50, M_WEATHER_50, M_TRACKTEMPERATURE_50, M_TRACKTEMPERATURECHANGE_50, M_AIRTEMPERATURE_50, M_AIRTEMPERATURECHANGE_50, M_RAINPERCENTAGE_50, M_SESSIONTYPE_51, M_TIMEOFFSET_51, M_WEATHER_51, M_TRACKTEMPERATURE_51, M_TRACKTEMPERATURECHANGE_51, M_AIRTEMPERATURE_51, M_AIRTEMPERATURECHANGE_51, M_RAINPERCENTAGE_51, M_SESSIONTYPE_52, M_TIMEOFFSET_52, M_WEATHER_52, M_TRACKTEMPERATURE_52, M_TRACKTEMPERATURECHANGE_52, M_AIRTEMPERATURE_52, M_AIRTEMPERATURECHANGE_52, M_RAINPERCENTAGE_52, M_SESSIONTYPE_53, M_TIMEOFFSET_53, M_WEATHER_53, M_TRACKTEMPERATURE_53, M_TRACKTEMPERATURECHANGE_53, M_AIRTEMPERATURE_53, M_AIRTEMPERATURECHANGE_53, M_RAINPERCENTAGE_53, M_SESSIONTYPE_54, M_TIMEOFFSET_54, M_WEATHER_54, M_TRACKTEMPERATURE_54, M_TRACKTEMPERATURECHANGE_54, M_AIRTEMPERATURE_54, M_AIRTEMPERATURECHANGE_54, M_RAINPERCENTAGE_54, M_SESSIONTYPE_55, M_TIMEOFFSET_55, M_WEATHER_55, M_TRACKTEMPERATURE_55, M_TRACKTEMPERATURECHANGE_55, M_AIRTEMPERATURE_55, M_AIRTEMPERATURECHANGE_55, M_RAINPERCENTAGE_55, M_SESSIONTYPE_56, M_TIMEOFFSET_56, M_WEATHER_56, M_TRACKTEMPERATURE_56, M_TRACKTEMPERATURECHANGE_56, M_AIRTEMPERATURE_56, M_AIRTEMPERATURECHANGE_56, M_RAINPERCENTAGE_56, M_FORECASTACCURACY, M_AIDIFFICULTY, M_SEASONLINKIDENTIFIER, M_WEEKENDLINKIDENTIFIER, M_SESSIONLINKIDENTIFIER, M_PITSTOPWINDOWIDEALLAP, M_PITSTOPWINDOWLATESTLAP, M_PITSTOPREJOINPOSITION, M_STEERINGASSIST, M_BRAKINGASSIST, M_GEARBOXASSIST, M_PITASSIST, M_PITRELEASEASSIST, M_ERSASSIST, M_DRSASSIST, M_DYNAMICRACINGLINE, M_DYNAMICRACINGLINETYPE, M_GAMEMODE, M_RULESET, M_TIMEOFDAY, M_SESSIONLENGTH) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :47, :48, :49, :50, :51, :52, :53, :54, :55, :56, :57, :58, :59, :60, :61, :62, :63, :64, :65, :66, :67, :68, :69, :70, :71, :72, :73, :74, :75, :76, :77, :78, :79, :80, :81, :82, :83, :84, :85, :86, :87, :88, :89, :90, :91, :92, :93, :94, :95, :96, :97, :98, :99, :100, :101, :102, :103, :104, :105, :106, :107, :108, :109, :110, :111, :112, :113, :114, :115, :116, :117, :118, :119, :120, :121, :122, :123, :124, :125, :126, :127, :128, :129, :130, :131, :132, :133, :134, :135, :136, :137, :138, :139, :140, :141, :142, :143, :144, :145, :146, :147, :148, :149, :150, :151, :152, :153, :154, :155, :156, :157, :158, :159, :160, :161, :162, :163, :164, :165, :166, :167, :168, :169, :170, :171, :172, :173, :174, :175, :176, :177, :178, :179, :180, :181, :182, :183, :184, :185, :186, :187, :188, :189, :190, :191, :192, :193, :194, :195, :196, :197, :198, :199, :200, :201, :202, :203, :204, :205, :206, :207, :208, :209, :210, :211, :212, :213, :214, :215, :216, :217, :218, :219, :220, :221, :222, :223, :224, :225, :226, :227, :228, :229, :230, :231, :232, :233, :234, :235, :236, :237, :238, :239, :240, :241, :242, :243, :244, :245, :246, :247, :248, :249, :250, :251, :252, :253, :254, :255, :256, :257, :258, :259, :260, :261, :262, :263, :264, :265, :266, :267, :268, :269, :270, :271, :272, :273, :274, :275, :276, :277, :278, :279, :280, :281, :282, :283, :284, :285, :286, :287, :288, :289, :290, :291, :292, :293, :294, :295, :296, :297, :298, :299, :300, :301, :302, :303, :304, :305, :306, :307, :308, :309, :310, :311, :312, :313, :314, :315, :316, :317, :318, :319, :320, :321, :322, :323, :324, :325, :326, :327, :328, :329, :330, :331, :332, :333, :334, :335, :336, :337, :338, :339, :340, :341, :342, :343, :344, :345, :346, :347, :348, :349, :350, :351, :352, :353, :354, :355, :356, :357, :358, :359, :360, :361, :362, :363, :364, :365, :366, :367, :368, :369, :370, :371, :372, :373, :374, :375, :376, :377, :378, :379, :380, :381, :382, :383, :384, :385, :386, :387, :388, :389, :390, :391, :392, :393, :394, :395, :396, :397, :398, :399, :400, :401, :402, :403, :404, :405, :406, :407, :408, :409, :410, :411, :412, :413, :414, :415, :416, :417, :418, :419, :420, :421, :422, :423, :424, :425, :426, :427, :428, :429, :430, :431, :432, :433, :434, :435, :436, :437, :438, :439, :440, :441, :442, :443, :444, :445, :446, :447, :448, :449, :450, :451, :452, :453, :454, :455, :456, :457, :458, :459, :460, :461, :462, :463, :464, :465, :466, :467, :468, :469, :470, :471, :472, :473, :474, :475, :476, :477, :478, :479, :480, :481, :482, :483, :484, :485, :486, :487, :488, :489, :490, :491, :492, :493, :494, :495, :496, :497, :498, :499, :500, :501, :502, :503, :504, :505, :506, :507, :508, :509, :510, :511, :512, :513, :514, :515, :516, :517, :518, :519, :520, :521, :522, :523, :524, :525, :526, :527, :528, :529, :530, :531, :532, :533, :534, :535, :536, :537, :538, :539, :540)", row)
        return "1"

    elif message[5:6] == b'\x02':
        #print("Packet 2")
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'IIHHfffBBBBBBBBBBBBBBHHB'
        #byteCode = byteCode + 'BB'

        unpacked = struct.unpack(byteCode, message[0:970])
        unpacked_str = ",".join(map(str,unpacked))
        #print(unpacked_str,  file=open('data/2.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_LAPDATA (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_LASTLAPTIMEINMS, M_CURRENTLAPTIMEINMS, M_SECTOR1TIMEINMS, M_SECTOR2TIMEINMS, M_LAPDISTANCE, M_TOTALDISTANCE, M_SAFETYCARDELTA, M_CARPOSITION, M_CURRENTLAPNUM, M_PITSTATUS, M_NUMPITSTOPS, M_SECTOR, M_CURRENTLAPINVALID, M_PENALTIES, M_WARNINGS, M_NUMUNSERVEDDRIVETHROUGHPENS, M_NUMUNSERVEDSTOPGOPENS, M_GRIDPOSITION, M_DRIVERSTATUS, M_RESULTSTATUS, M_PITLANETIMERACTIVE, M_PITLANETIMEINLANEINMS, M_PITSTOPTIMERINMS, M_PITSTOPSHOULDSERVEPEN) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34)", row[0:10]+row[(10+(int(row[8])*24)):(10+((int(row[8])+1)*24))]+row[538:538])

        return unpacked_str

    elif message[5:6] == b'\x03':
        #print("Packet 3")
        #unpackedd_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_3_stream_OCID
        return "3"

    elif message[5:6] == b'\x04':
        #print("Packet 4")
        byteCode = '<HBBBBQfIBBB'
        for x in range(22):
            byteCode = byteCode + 'BBBBBBB48sB'

        unpacked = struct.unpack(byteCode, message[0:1257])
        unpacked_str = ",".join(map(str,unpacked))
        converted_str = unpacked_str.replace("\\x00", "").replace(",b",",").replace("'","")
        row = converted_str.split(',')
        target_cursor.execute("insert into F1SIM_PARTICIPANTS (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_NUMACTIVECARS, M_AICONTROLLED_1, M_DRIVERID_1, M_NETWORKID_1, M_TEAMID_1, M_MYTEAM_1, M_RACENUMBER_1, M_NATIONALITY_1, M_NAME_1, M_YOURTELEMETRY_1, M_AICONTROLLED_2, M_DRIVERID_2, M_NETWORKID_2, M_TEAMID_2, M_MYTEAM_2, M_RACENUMBER_2, M_NATIONALITY_2, M_NAME_2, M_YOURTELEMETRY_2, M_AICONTROLLED_3, M_DRIVERID_3, M_NETWORKID_3, M_TEAMID_3, M_MYTEAM_3, M_RACENUMBER_3, M_NATIONALITY_3, M_NAME_3, M_YOURTELEMETRY_3, M_AICONTROLLED_4, M_DRIVERID_4, M_NETWORKID_4, M_TEAMID_4, M_MYTEAM_4, M_RACENUMBER_4, M_NATIONALITY_4, M_NAME_4, M_YOURTELEMETRY_4, M_AICONTROLLED_5, M_DRIVERID_5, M_NETWORKID_5, M_TEAMID_5, M_MYTEAM_5, M_RACENUMBER_5, M_NATIONALITY_5, M_NAME_5, M_YOURTELEMETRY_5, M_AICONTROLLED_6, M_DRIVERID_6, M_NETWORKID_6, M_TEAMID_6, M_MYTEAM_6, M_RACENUMBER_6, M_NATIONALITY_6, M_NAME_6, M_YOURTELEMETRY_6, M_AICONTROLLED_7, M_DRIVERID_7, M_NETWORKID_7, M_TEAMID_7, M_MYTEAM_7, M_RACENUMBER_7, M_NATIONALITY_7, M_NAME_7, M_YOURTELEMETRY_7, M_AICONTROLLED_8, M_DRIVERID_8, M_NETWORKID_8, M_TEAMID_8, M_MYTEAM_8, M_RACENUMBER_8, M_NATIONALITY_8, M_NAME_8, M_YOURTELEMETRY_8, M_AICONTROLLED_9, M_DRIVERID_9, M_NETWORKID_9, M_TEAMID_9, M_MYTEAM_9, M_RACENUMBER_9, M_NATIONALITY_9, M_NAME_9, M_YOURTELEMETRY_9, M_AICONTROLLED_10, M_DRIVERID_10, M_NETWORKID_10, M_TEAMID_10, M_MYTEAM_10, M_RACENUMBER_10, M_NATIONALITY_10, M_NAME_10, M_YOURTELEMETRY_10, M_AICONTROLLED_11, M_DRIVERID_11, M_NETWORKID_11, M_TEAMID_11, M_MYTEAM_11, M_RACENUMBER_11, M_NATIONALITY_11, M_NAME_11, M_YOURTELEMETRY_11, M_AICONTROLLED_12, M_DRIVERID_12, M_NETWORKID_12, M_TEAMID_12, M_MYTEAM_12, M_RACENUMBER_12, M_NATIONALITY_12, M_NAME_12, M_YOURTELEMETRY_12, M_AICONTROLLED_13, M_DRIVERID_13, M_NETWORKID_13, M_TEAMID_13, M_MYTEAM_13, M_RACENUMBER_13, M_NATIONALITY_13, M_NAME_13, M_YOURTELEMETRY_13, M_AICONTROLLED_14, M_DRIVERID_14, M_NETWORKID_14, M_TEAMID_14, M_MYTEAM_14, M_RACENUMBER_14, M_NATIONALITY_14, M_NAME_14, M_YOURTELEMETRY_14, M_AICONTROLLED_15, M_DRIVERID_15, M_NETWORKID_15, M_TEAMID_15, M_MYTEAM_15, M_RACENUMBER_15, M_NATIONALITY_15, M_NAME_15, M_YOURTELEMETRY_15, M_AICONTROLLED_16, M_DRIVERID_16, M_NETWORKID_16, M_TEAMID_16, M_MYTEAM_16, M_RACENUMBER_16, M_NATIONALITY_16, M_NAME_16, M_YOURTELEMETRY_16, M_AICONTROLLED_17, M_DRIVERID_17, M_NETWORKID_17, M_TEAMID_17, M_MYTEAM_17, M_RACENUMBER_17, M_NATIONALITY_17, M_NAME_17, M_YOURTELEMETRY_17, M_AICONTROLLED_18, M_DRIVERID_18, M_NETWORKID_18, M_TEAMID_18, M_MYTEAM_18, M_RACENUMBER_18, M_NATIONALITY_18, M_NAME_18, M_YOURTELEMETRY_18, M_AICONTROLLED_19, M_DRIVERID_19, M_NETWORKID_19, M_TEAMID_19, M_MYTEAM_19, M_RACENUMBER_19, M_NATIONALITY_19, M_NAME_19, M_YOURTELEMETRY_19, M_AICONTROLLED_20, M_DRIVERID_20, M_NETWORKID_20, M_TEAMID_20, M_MYTEAM_20, M_RACENUMBER_20, M_NATIONALITY_20, M_NAME_20, M_YOURTELEMETRY_20, M_AICONTROLLED_21, M_DRIVERID_21, M_NETWORKID_21, M_TEAMID_21, M_MYTEAM_21, M_RACENUMBER_21, M_NATIONALITY_21, M_NAME_21, M_YOURTELEMETRY_21, M_AICONTROLLED_22, M_DRIVERID_22, M_NETWORKID_22, M_TEAMID_22, M_MYTEAM_22, M_RACENUMBER_22, M_NATIONALITY_22, M_NAME_22, M_YOURTELEMETRY_22) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :47, :48, :49, :50, :51, :52, :53, :54, :55, :56, :57, :58, :59, :60, :61, :62, :63, :64, :65, :66, :67, :68, :69, :70, :71, :72, :73, :74, :75, :76, :77, :78, :79, :80, :81, :82, :83, :84, :85, :86, :87, :88, :89, :90, :91, :92, :93, :94, :95, :96, :97, :98, :99, :100, :101, :102, :103, :104, :105, :106, :107, :108, :109, :110, :111, :112, :113, :114, :115, :116, :117, :118, :119, :120, :121, :122, :123, :124, :125, :126, :127, :128, :129, :130, :131, :132, :133, :134, :135, :136, :137, :138, :139, :140, :141, :142, :143, :144, :145, :146, :147, :148, :149, :150, :151, :152, :153, :154, :155, :156, :157, :158, :159, :160, :161, :162, :163, :164, :165, :166, :167, :168, :169, :170, :171, :172, :173, :174, :175, :176, :177, :178, :179, :180, :181, :182, :183, :184, :185, :186, :187, :188, :189, :190, :191, :192, :193, :194, :195, :196, :197, :198, :199, :200, :201, :202, :203, :204, :205, :206, :207, :208, :209)", row)
        #print(unpacked_str,  file=open('data/4.csv', 'w'))
        #print(unpacked_str)
        return "4"

    elif message[5:6] == b'\x05':
        #print("Packet 5")
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'BBBBffffBBBBBBBBffffBf'
        unpacked = struct.unpack(byteCode, message[0:1102])
        unpacked_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_5_stream_OCID
        #print(unpacked_str,  file=open('data/5.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_SETUP (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_FRONTWING, M_REARWING, M_ONTHROTTLE, M_OFFTHROTTLE, M_FRONTCAMBER, M_REARCAMBER, M_FRONTTOE, M_REARTOE, M_FRONTSUSPENSION, M_REARSUSPENSION, M_FRONTANTIROLLBAR, M_REARANTIROLLBAR, M_FRONTSUSPENSIONHEIGHT, M_REARSUSPENSIONHEIGHT, M_BRAKEPRESSURE, M_BRAKEBIAS, M_REARLEFTTYREPRESSURE, M_REARRIGHTTYREPRESSURE, M_FRONTLEFTTYREPRESSURE, M_FRONTRIGHTTYREPRESSURE, M_BALLAST, M_FUELLOAD) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32)", row[0:10]+row[(10+(int(row[8])*22)):(10+((int(row[8])+1)*22))])
        return "5"

    elif message[5:6] == b'\x06':
        #print("Packet 6")
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'HfffBbHBBHHHHHBBBBBBBBHffffBBBB'
        byteCode = byteCode + 'BBb'
        unpacked = struct.unpack(byteCode, message[0:1347])
        unpacked_str = ",".join(map(str,unpacked))
        #print(unpacked_str,  file=open('data/6.csv', 'w'))
        #print(unpacked_str)
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_TELEMETRY (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_SPEED, M_THROTTLE, M_STEER, M_BRAKE, M_CLUTCH, M_GEAR, M_ENGINERPM, M_DRS, M_REVLIGHTSPERCENT, M_REVLIGHTSBITVALUE, M_BRAKESTEMPERATURE_RL, M_BRAKESTEMPERATURE_RR, M_BRAKESTEMPERATURE_FL, M_BRAKESTEMPERATURE_FR, M_TYRESSURFACETEMPERATURE_RL, M_TYRESSURFACETEMPERATURE_RR, M_TYRESSURFACETEMPERATURE_FL, M_TYRESSURFACETEMPERATURE_FR, M_TYRESINNERTEMPERATURE_RL, M_TYRESINNERTEMPERATURE_RR, M_TYRESINNERTEMPERATURE_FL, M_TYRESINNERTEMPERATURE_FR, M_ENGINETEMPERATURE, M_TYRESPRESSURE_RL, M_TYRESPRESSURE_RR, M_TYRESPRESSURE_FL, M_TYRESPRESSURE_FR, M_SURFACETYPE_RL, M_SURFACETYPE_RR, M_SURFACETYPE_FL, M_SURFACETYPE_FR, M_MFDPANELINDEX, M_MFDPANELINDEXSECONDARYPLAYER, M_SUGGESTEDGEAR) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44)", row[0:10]+row[(10+(int(row[8])*31)):(10+((int(row[8])+1)*31))]+row[692:695])
 
        return unpacked_str

    elif message[5:6] == b'\x07':
        #print("Packet 7")
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'BBBBBfffHHBBHBBBbfBfffB'
        unpacked = struct.unpack(byteCode, message[0:1058])
        unpacked_str = ",".join(map(str,unpacked))
        #return unpacked_str
        #print(unpacked_str,  file=open('data/7.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_STATUS (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_TRACTIONCONTROL, M_ANTILOCKBRAKES, M_FUELMIX, M_FRONTBRAKEBIAS, M_PITLIMITERSTATUS, M_FUELINTANK, M_FUELCAPACITY, M_FUELREMAININGLAPS, M_MAXRPM, M_IDLERPM, M_MAXGEARS, M_DRSALLOWED, M_DRSACTIVATIONDISTANCE, M_ACTUALTYRECOMPOUND, M_VISUALTYRECOMPOUND, M_TYRESAGELAPS, M_VEHICLEFIAFLAGS, M_ERSSTOREENERGY, M_ERSDEPLOYMODE, M_ERSHARVESTEDTHISLAPMGUK, M_ERSHARVESTEDTHISLAPMGUH, M_ERSDEPLOYEDTHISLAP, M_NETWORKPAUSED) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33)", row[0:10]+row[(10+(int(row[8])*23)):(10+((int(row[8])+1)*23))])


        return "7"

    elif message[5:6] == b'\x08':
        #print("Packet 8")
        byteCode = '<HBBBBQfIBBB' # accounts for num cars
        for x in range(22):
            byteCode = byteCode + 'BBBBBBIdBBBBBBBBBBBBBBBBBBBBBBBBBBB'
        unpacked = struct.unpack(byteCode, message[0:1015])
        unpacked_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_8_stream_OCID
        #print(unpacked_str,  file=open('data/8.csv', 'w'))

        return "8"

    elif message[5:6] == b'\x09':
        #print("Packet 9")
        
        byteCode = '<HBBBBQfIBBB' # accounts for num players
        for x in range(22):
            byteCode = byteCode + 'BBB48sBB'

        unpacked = struct.unpack(byteCode, message[0:1191])
        unpacked_str = ",".join(map(str,unpacked))
        #print(unpacked_str,  file=open('data/8.csv', 'w'))
        #print(unpacked_str)
        return "9"

    elif message[5:6] == b'\n':
        #print("Packet 10")
        #unpackedd_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_10_stream_OCID
        # Bytes
        byteCode = '<HBBBBQfIBB'
        for x in range(22):
            byteCode = byteCode + 'ffffBBBBBBBBBBBBBBBBBBBBBBBBBB'

        unpacked = struct.unpack(byteCode, message[0:1191])   #old setting
        #unpacked = struct.unpack(byteCode, message[0:947])
        unpacked_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_8_stream_OCID
        #print(unpacked_str,  file=open('data/10.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_DAMAGE (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_TYRESWEAR_RL, M_TYRESWEAR_RR, M_TYRESWEAR_FL, M_TYRESWEAR_FR, M_TYRESDAMAGE_RL, M_TYRESDAMAGE_RR, M_TYRESDAMAGE_FL, M_TYRESDAMAGE_FR, M_BRAKESDAMAGE_RL, M_BRAKESDAMAGE_RR, M_BRAKESDAMAGE_FL, M_BRAKESDAMAGE_FR, M_FRONTLEFTWINGDAMAGE, M_FRONTRIGHTWINGDAMAGE, M_REARWINGDAMAGE, M_FLOORDAMAGE, M_DIFFUSERDAMAGE, M_SIDEPODDAMAGE, M_DRSFAULT, M_ERSFAULT, M_GEARBOXDAMAGE, M_ENGINEDAMAGE, M_ENGINEMGUHWEAR, M_ENGINEESWEAR, M_ENGINECEWEAR, M_ENGINEICEWEAR, M_ENGINEMGUKWEAR, M_ENGINETCWEAR, M_ENGINEBLOWN, M_ENGINESEIZED) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40)", row[0:10]+row[(10+(int(row[8])*30)):(10+((int(row[8])+1)*30))])


        return "10"

    elif message[5:6] == b'\x0b':
        #print("Packet 11")
        byteCode = '<HBBBBQfIBBBBBBBBB'
        for x in range(100):
            byteCode = byteCode + 'IHHHB'
        for x in range(8):
            byteCode = byteCode + 'BBB'
        #byteCode = byteCode + 'ffffffffffffffffffffffffffffff'

        unpacked = struct.unpack(byteCode, message[0:1191])
        unpacked_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_8_stream_OCID
        #print(unpacked_str,  file=open('data/11.csv', 'w'))
        row = unpacked_str.split(',')
        target_cursor.execute("insert into F1SIM_HISTORY (M_PACKETFORMAT, M_GAMEMAJORVERSION, M_GAMEMINORVERSION, M_PACKETVERSION, M_PACKETID, M_SESSIONUID, M_SESSIONTIME, M_FRAMEIDENTIFIER, M_PLAYERCARINDEX, M_SECONDARYPLAYERCARINDEX, M_CARIDX, M_NUMLAPS, M_NUMTYRESTINTS, M_BESTLAPTIMELAPNUM, M_BESTSECTOR1LAPNUM, M_BESTSECTOR2LAPNUM, M_BESTSECTOR3LAPNUM, M_LAPTIMEINMS_1, M_SECTOR1TIMEINMS_1, M_SECTOR2TIMEINMS_1, M_SECTOR3TIMEINMS_1, M_LAPVALIDBITFLAGS_1, M_LAPTIMEINMS_2, M_SECTOR1TIMEINMS_2, M_SECTOR2TIMEINMS_2, M_SECTOR3TIMEINMS_2, M_LAPVALIDBITFLAGS_2, M_LAPTIMEINMS_3, M_SECTOR1TIMEINMS_3, M_SECTOR2TIMEINMS_3, M_SECTOR3TIMEINMS_3, M_LAPVALIDBITFLAGS_3, M_LAPTIMEINMS_4, M_SECTOR1TIMEINMS_4, M_SECTOR2TIMEINMS_4, M_SECTOR3TIMEINMS_4, M_LAPVALIDBITFLAGS_4, M_LAPTIMEINMS_5, M_SECTOR1TIMEINMS_5, M_SECTOR2TIMEINMS_5, M_SECTOR3TIMEINMS_5, M_LAPVALIDBITFLAGS_5, M_LAPTIMEINMS_6, M_SECTOR1TIMEINMS_6, M_SECTOR2TIMEINMS_6, M_SECTOR3TIMEINMS_6, M_LAPVALIDBITFLAGS_6, M_LAPTIMEINMS_7, M_SECTOR1TIMEINMS_7, M_SECTOR2TIMEINMS_7, M_SECTOR3TIMEINMS_7, M_LAPVALIDBITFLAGS_7, M_LAPTIMEINMS_8, M_SECTOR1TIMEINMS_8, M_SECTOR2TIMEINMS_8, M_SECTOR3TIMEINMS_8, M_LAPVALIDBITFLAGS_8, M_LAPTIMEINMS_9, M_SECTOR1TIMEINMS_9, M_SECTOR2TIMEINMS_9, M_SECTOR3TIMEINMS_9, M_LAPVALIDBITFLAGS_9, M_LAPTIMEINMS_10, M_SECTOR1TIMEINMS_10, M_SECTOR2TIMEINMS_10, M_SECTOR3TIMEINMS_10, M_LAPVALIDBITFLAGS_10, M_LAPTIMEINMS_11, M_SECTOR1TIMEINMS_11, M_SECTOR2TIMEINMS_11, M_SECTOR3TIMEINMS_11, M_LAPVALIDBITFLAGS_11, M_LAPTIMEINMS_12, M_SECTOR1TIMEINMS_12, M_SECTOR2TIMEINMS_12, M_SECTOR3TIMEINMS_12, M_LAPVALIDBITFLAGS_12, M_LAPTIMEINMS_13, M_SECTOR1TIMEINMS_13, M_SECTOR2TIMEINMS_13, M_SECTOR3TIMEINMS_13, M_LAPVALIDBITFLAGS_13, M_LAPTIMEINMS_14, M_SECTOR1TIMEINMS_14, M_SECTOR2TIMEINMS_14, M_SECTOR3TIMEINMS_14, M_LAPVALIDBITFLAGS_14, M_LAPTIMEINMS_15, M_SECTOR1TIMEINMS_15, M_SECTOR2TIMEINMS_15, M_SECTOR3TIMEINMS_15, M_LAPVALIDBITFLAGS_15, M_LAPTIMEINMS_16, M_SECTOR1TIMEINMS_16, M_SECTOR2TIMEINMS_16, M_SECTOR3TIMEINMS_16, M_LAPVALIDBITFLAGS_16, M_LAPTIMEINMS_17, M_SECTOR1TIMEINMS_17, M_SECTOR2TIMEINMS_17, M_SECTOR3TIMEINMS_17, M_LAPVALIDBITFLAGS_17, M_LAPTIMEINMS_18, M_SECTOR1TIMEINMS_18, M_SECTOR2TIMEINMS_18, M_SECTOR3TIMEINMS_18, M_LAPVALIDBITFLAGS_18, M_LAPTIMEINMS_19, M_SECTOR1TIMEINMS_19, M_SECTOR2TIMEINMS_19, M_SECTOR3TIMEINMS_19, M_LAPVALIDBITFLAGS_19, M_LAPTIMEINMS_20, M_SECTOR1TIMEINMS_20, M_SECTOR2TIMEINMS_20, M_SECTOR3TIMEINMS_20, M_LAPVALIDBITFLAGS_20, M_LAPTIMEINMS_21, M_SECTOR1TIMEINMS_21, M_SECTOR2TIMEINMS_21, M_SECTOR3TIMEINMS_21, M_LAPVALIDBITFLAGS_21, M_LAPTIMEINMS_22, M_SECTOR1TIMEINMS_22, M_SECTOR2TIMEINMS_22, M_SECTOR3TIMEINMS_22, M_LAPVALIDBITFLAGS_22, M_LAPTIMEINMS_23, M_SECTOR1TIMEINMS_23, M_SECTOR2TIMEINMS_23, M_SECTOR3TIMEINMS_23, M_LAPVALIDBITFLAGS_23, M_LAPTIMEINMS_24, M_SECTOR1TIMEINMS_24, M_SECTOR2TIMEINMS_24, M_SECTOR3TIMEINMS_24, M_LAPVALIDBITFLAGS_24, M_LAPTIMEINMS_25, M_SECTOR1TIMEINMS_25, M_SECTOR2TIMEINMS_25, M_SECTOR3TIMEINMS_25, M_LAPVALIDBITFLAGS_25, M_LAPTIMEINMS_26, M_SECTOR1TIMEINMS_26, M_SECTOR2TIMEINMS_26, M_SECTOR3TIMEINMS_26, M_LAPVALIDBITFLAGS_26, M_LAPTIMEINMS_27, M_SECTOR1TIMEINMS_27, M_SECTOR2TIMEINMS_27, M_SECTOR3TIMEINMS_27, M_LAPVALIDBITFLAGS_27, M_LAPTIMEINMS_28, M_SECTOR1TIMEINMS_28, M_SECTOR2TIMEINMS_28, M_SECTOR3TIMEINMS_28, M_LAPVALIDBITFLAGS_28, M_LAPTIMEINMS_29, M_SECTOR1TIMEINMS_29, M_SECTOR2TIMEINMS_29, M_SECTOR3TIMEINMS_29, M_LAPVALIDBITFLAGS_29, M_LAPTIMEINMS_30, M_SECTOR1TIMEINMS_30, M_SECTOR2TIMEINMS_30, M_SECTOR3TIMEINMS_30, M_LAPVALIDBITFLAGS_30, M_LAPTIMEINMS_31, M_SECTOR1TIMEINMS_31, M_SECTOR2TIMEINMS_31, M_SECTOR3TIMEINMS_31, M_LAPVALIDBITFLAGS_31, M_LAPTIMEINMS_32, M_SECTOR1TIMEINMS_32, M_SECTOR2TIMEINMS_32, M_SECTOR3TIMEINMS_32, M_LAPVALIDBITFLAGS_32, M_LAPTIMEINMS_33, M_SECTOR1TIMEINMS_33, M_SECTOR2TIMEINMS_33, M_SECTOR3TIMEINMS_33, M_LAPVALIDBITFLAGS_33, M_LAPTIMEINMS_34, M_SECTOR1TIMEINMS_34, M_SECTOR2TIMEINMS_34, M_SECTOR3TIMEINMS_34, M_LAPVALIDBITFLAGS_34, M_LAPTIMEINMS_35, M_SECTOR1TIMEINMS_35, M_SECTOR2TIMEINMS_35, M_SECTOR3TIMEINMS_35, M_LAPVALIDBITFLAGS_35, M_LAPTIMEINMS_36, M_SECTOR1TIMEINMS_36, M_SECTOR2TIMEINMS_36, M_SECTOR3TIMEINMS_36, M_LAPVALIDBITFLAGS_36, M_LAPTIMEINMS_37, M_SECTOR1TIMEINMS_37, M_SECTOR2TIMEINMS_37, M_SECTOR3TIMEINMS_37, M_LAPVALIDBITFLAGS_37, M_LAPTIMEINMS_38, M_SECTOR1TIMEINMS_38, M_SECTOR2TIMEINMS_38, M_SECTOR3TIMEINMS_38, M_LAPVALIDBITFLAGS_38, M_LAPTIMEINMS_39, M_SECTOR1TIMEINMS_39, M_SECTOR2TIMEINMS_39, M_SECTOR3TIMEINMS_39, M_LAPVALIDBITFLAGS_39, M_LAPTIMEINMS_40, M_SECTOR1TIMEINMS_40, M_SECTOR2TIMEINMS_40, M_SECTOR3TIMEINMS_40, M_LAPVALIDBITFLAGS_40, M_LAPTIMEINMS_41, M_SECTOR1TIMEINMS_41, M_SECTOR2TIMEINMS_41, M_SECTOR3TIMEINMS_41, M_LAPVALIDBITFLAGS_41, M_LAPTIMEINMS_42, M_SECTOR1TIMEINMS_42, M_SECTOR2TIMEINMS_42, M_SECTOR3TIMEINMS_42, M_LAPVALIDBITFLAGS_42, M_LAPTIMEINMS_43, M_SECTOR1TIMEINMS_43, M_SECTOR2TIMEINMS_43, M_SECTOR3TIMEINMS_43, M_LAPVALIDBITFLAGS_43, M_LAPTIMEINMS_44, M_SECTOR1TIMEINMS_44, M_SECTOR2TIMEINMS_44, M_SECTOR3TIMEINMS_44, M_LAPVALIDBITFLAGS_44, M_LAPTIMEINMS_45, M_SECTOR1TIMEINMS_45, M_SECTOR2TIMEINMS_45, M_SECTOR3TIMEINMS_45, M_LAPVALIDBITFLAGS_45, M_LAPTIMEINMS_46, M_SECTOR1TIMEINMS_46, M_SECTOR2TIMEINMS_46, M_SECTOR3TIMEINMS_46, M_LAPVALIDBITFLAGS_46, M_LAPTIMEINMS_47, M_SECTOR1TIMEINMS_47, M_SECTOR2TIMEINMS_47, M_SECTOR3TIMEINMS_47, M_LAPVALIDBITFLAGS_47, M_LAPTIMEINMS_48, M_SECTOR1TIMEINMS_48, M_SECTOR2TIMEINMS_48, M_SECTOR3TIMEINMS_48, M_LAPVALIDBITFLAGS_48, M_LAPTIMEINMS_49, M_SECTOR1TIMEINMS_49, M_SECTOR2TIMEINMS_49, M_SECTOR3TIMEINMS_49, M_LAPVALIDBITFLAGS_49, M_LAPTIMEINMS_50, M_SECTOR1TIMEINMS_50, M_SECTOR2TIMEINMS_50, M_SECTOR3TIMEINMS_50, M_LAPVALIDBITFLAGS_50, M_LAPTIMEINMS_51, M_SECTOR1TIMEINMS_51, M_SECTOR2TIMEINMS_51, M_SECTOR3TIMEINMS_51, M_LAPVALIDBITFLAGS_51, M_LAPTIMEINMS_52, M_SECTOR1TIMEINMS_52, M_SECTOR2TIMEINMS_52, M_SECTOR3TIMEINMS_52, M_LAPVALIDBITFLAGS_52, M_LAPTIMEINMS_53, M_SECTOR1TIMEINMS_53, M_SECTOR2TIMEINMS_53, M_SECTOR3TIMEINMS_53, M_LAPVALIDBITFLAGS_53, M_LAPTIMEINMS_54, M_SECTOR1TIMEINMS_54, M_SECTOR2TIMEINMS_54, M_SECTOR3TIMEINMS_54, M_LAPVALIDBITFLAGS_54, M_LAPTIMEINMS_55, M_SECTOR1TIMEINMS_55, M_SECTOR2TIMEINMS_55, M_SECTOR3TIMEINMS_55, M_LAPVALIDBITFLAGS_55, M_LAPTIMEINMS_56, M_SECTOR1TIMEINMS_56, M_SECTOR2TIMEINMS_56, M_SECTOR3TIMEINMS_56, M_LAPVALIDBITFLAGS_56, M_LAPTIMEINMS_57, M_SECTOR1TIMEINMS_57, M_SECTOR2TIMEINMS_57, M_SECTOR3TIMEINMS_57, M_LAPVALIDBITFLAGS_57, M_LAPTIMEINMS_58, M_SECTOR1TIMEINMS_58, M_SECTOR2TIMEINMS_58, M_SECTOR3TIMEINMS_58, M_LAPVALIDBITFLAGS_58, M_LAPTIMEINMS_59, M_SECTOR1TIMEINMS_59, M_SECTOR2TIMEINMS_59, M_SECTOR3TIMEINMS_59, M_LAPVALIDBITFLAGS_59, M_LAPTIMEINMS_60, M_SECTOR1TIMEINMS_60, M_SECTOR2TIMEINMS_60, M_SECTOR3TIMEINMS_60, M_LAPVALIDBITFLAGS_60, M_LAPTIMEINMS_61, M_SECTOR1TIMEINMS_61, M_SECTOR2TIMEINMS_61, M_SECTOR3TIMEINMS_61, M_LAPVALIDBITFLAGS_61, M_LAPTIMEINMS_62, M_SECTOR1TIMEINMS_62, M_SECTOR2TIMEINMS_62, M_SECTOR3TIMEINMS_62, M_LAPVALIDBITFLAGS_62, M_LAPTIMEINMS_63, M_SECTOR1TIMEINMS_63, M_SECTOR2TIMEINMS_63, M_SECTOR3TIMEINMS_63, M_LAPVALIDBITFLAGS_63, M_LAPTIMEINMS_64, M_SECTOR1TIMEINMS_64, M_SECTOR2TIMEINMS_64, M_SECTOR3TIMEINMS_64, M_LAPVALIDBITFLAGS_64, M_LAPTIMEINMS_65, M_SECTOR1TIMEINMS_65, M_SECTOR2TIMEINMS_65, M_SECTOR3TIMEINMS_65, M_LAPVALIDBITFLAGS_65, M_LAPTIMEINMS_66, M_SECTOR1TIMEINMS_66, M_SECTOR2TIMEINMS_66, M_SECTOR3TIMEINMS_66, M_LAPVALIDBITFLAGS_66, M_LAPTIMEINMS_67, M_SECTOR1TIMEINMS_67, M_SECTOR2TIMEINMS_67, M_SECTOR3TIMEINMS_67, M_LAPVALIDBITFLAGS_67, M_LAPTIMEINMS_68, M_SECTOR1TIMEINMS_68, M_SECTOR2TIMEINMS_68, M_SECTOR3TIMEINMS_68, M_LAPVALIDBITFLAGS_68, M_LAPTIMEINMS_69, M_SECTOR1TIMEINMS_69, M_SECTOR2TIMEINMS_69, M_SECTOR3TIMEINMS_69, M_LAPVALIDBITFLAGS_69, M_LAPTIMEINMS_70, M_SECTOR1TIMEINMS_70, M_SECTOR2TIMEINMS_70, M_SECTOR3TIMEINMS_70, M_LAPVALIDBITFLAGS_70, M_LAPTIMEINMS_71, M_SECTOR1TIMEINMS_71, M_SECTOR2TIMEINMS_71, M_SECTOR3TIMEINMS_71, M_LAPVALIDBITFLAGS_71, M_LAPTIMEINMS_72, M_SECTOR1TIMEINMS_72, M_SECTOR2TIMEINMS_72, M_SECTOR3TIMEINMS_72, M_LAPVALIDBITFLAGS_72, M_LAPTIMEINMS_73, M_SECTOR1TIMEINMS_73, M_SECTOR2TIMEINMS_73, M_SECTOR3TIMEINMS_73, M_LAPVALIDBITFLAGS_73, M_LAPTIMEINMS_74, M_SECTOR1TIMEINMS_74, M_SECTOR2TIMEINMS_74, M_SECTOR3TIMEINMS_74, M_LAPVALIDBITFLAGS_74, M_LAPTIMEINMS_75, M_SECTOR1TIMEINMS_75, M_SECTOR2TIMEINMS_75, M_SECTOR3TIMEINMS_75, M_LAPVALIDBITFLAGS_75, M_LAPTIMEINMS_76, M_SECTOR1TIMEINMS_76, M_SECTOR2TIMEINMS_76, M_SECTOR3TIMEINMS_76, M_LAPVALIDBITFLAGS_76, M_LAPTIMEINMS_77, M_SECTOR1TIMEINMS_77, M_SECTOR2TIMEINMS_77, M_SECTOR3TIMEINMS_77, M_LAPVALIDBITFLAGS_77, M_LAPTIMEINMS_78, M_SECTOR1TIMEINMS_78, M_SECTOR2TIMEINMS_78, M_SECTOR3TIMEINMS_78, M_LAPVALIDBITFLAGS_78, M_LAPTIMEINMS_79, M_SECTOR1TIMEINMS_79, M_SECTOR2TIMEINMS_79, M_SECTOR3TIMEINMS_79, M_LAPVALIDBITFLAGS_79, M_LAPTIMEINMS_80, M_SECTOR1TIMEINMS_80, M_SECTOR2TIMEINMS_80, M_SECTOR3TIMEINMS_80, M_LAPVALIDBITFLAGS_80, M_LAPTIMEINMS_81, M_SECTOR1TIMEINMS_81, M_SECTOR2TIMEINMS_81, M_SECTOR3TIMEINMS_81, M_LAPVALIDBITFLAGS_81, M_LAPTIMEINMS_82, M_SECTOR1TIMEINMS_82, M_SECTOR2TIMEINMS_82, M_SECTOR3TIMEINMS_82, M_LAPVALIDBITFLAGS_82, M_LAPTIMEINMS_83, M_SECTOR1TIMEINMS_83, M_SECTOR2TIMEINMS_83, M_SECTOR3TIMEINMS_83, M_LAPVALIDBITFLAGS_83, M_LAPTIMEINMS_84, M_SECTOR1TIMEINMS_84, M_SECTOR2TIMEINMS_84, M_SECTOR3TIMEINMS_84, M_LAPVALIDBITFLAGS_84, M_LAPTIMEINMS_85, M_SECTOR1TIMEINMS_85, M_SECTOR2TIMEINMS_85, M_SECTOR3TIMEINMS_85, M_LAPVALIDBITFLAGS_85, M_LAPTIMEINMS_86, M_SECTOR1TIMEINMS_86, M_SECTOR2TIMEINMS_86, M_SECTOR3TIMEINMS_86, M_LAPVALIDBITFLAGS_86, M_LAPTIMEINMS_87, M_SECTOR1TIMEINMS_87, M_SECTOR2TIMEINMS_87, M_SECTOR3TIMEINMS_87, M_LAPVALIDBITFLAGS_87, M_LAPTIMEINMS_88, M_SECTOR1TIMEINMS_88, M_SECTOR2TIMEINMS_88, M_SECTOR3TIMEINMS_88, M_LAPVALIDBITFLAGS_88, M_LAPTIMEINMS_89, M_SECTOR1TIMEINMS_89, M_SECTOR2TIMEINMS_89, M_SECTOR3TIMEINMS_89, M_LAPVALIDBITFLAGS_89, M_LAPTIMEINMS_90, M_SECTOR1TIMEINMS_90, M_SECTOR2TIMEINMS_90, M_SECTOR3TIMEINMS_90, M_LAPVALIDBITFLAGS_90, M_LAPTIMEINMS_91, M_SECTOR1TIMEINMS_91, M_SECTOR2TIMEINMS_91, M_SECTOR3TIMEINMS_91, M_LAPVALIDBITFLAGS_91, M_LAPTIMEINMS_92, M_SECTOR1TIMEINMS_92, M_SECTOR2TIMEINMS_92, M_SECTOR3TIMEINMS_92, M_LAPVALIDBITFLAGS_92, M_LAPTIMEINMS_93, M_SECTOR1TIMEINMS_93, M_SECTOR2TIMEINMS_93, M_SECTOR3TIMEINMS_93, M_LAPVALIDBITFLAGS_93, M_LAPTIMEINMS_94, M_SECTOR1TIMEINMS_94, M_SECTOR2TIMEINMS_94, M_SECTOR3TIMEINMS_94, M_LAPVALIDBITFLAGS_94, M_LAPTIMEINMS_95, M_SECTOR1TIMEINMS_95, M_SECTOR2TIMEINMS_95, M_SECTOR3TIMEINMS_95, M_LAPVALIDBITFLAGS_95, M_LAPTIMEINMS_96, M_SECTOR1TIMEINMS_96, M_SECTOR2TIMEINMS_96, M_SECTOR3TIMEINMS_96, M_LAPVALIDBITFLAGS_96, M_LAPTIMEINMS_97, M_SECTOR1TIMEINMS_97, M_SECTOR2TIMEINMS_97, M_SECTOR3TIMEINMS_97, M_LAPVALIDBITFLAGS_97, M_LAPTIMEINMS_98, M_SECTOR1TIMEINMS_98, M_SECTOR2TIMEINMS_98, M_SECTOR3TIMEINMS_98, M_LAPVALIDBITFLAGS_98, M_LAPTIMEINMS_99, M_SECTOR1TIMEINMS_99, M_SECTOR2TIMEINMS_99, M_SECTOR3TIMEINMS_99, M_LAPVALIDBITFLAGS_99, M_LAPTIMEINMS_100, M_SECTOR1TIMEINMS_100, M_SECTOR2TIMEINMS_100, M_SECTOR3TIMEINMS_100, M_LAPVALIDBITFLAGS_100, M_ENDLAP_1, M_TYREACTUALCOMPOUND_1, M_TYREVISUALCOMPOUND_1, M_ENDLAP_2, M_TYREACTUALCOMPOUND_2, M_TYREVISUALCOMPOUND_2, M_ENDLAP_3, M_TYREACTUALCOMPOUND_3, M_TYREVISUALCOMPOUND_3, M_ENDLAP_4, M_TYREACTUALCOMPOUND_4, M_TYREVISUALCOMPOUND_4, M_ENDLAP_5, M_TYREACTUALCOMPOUND_5, M_TYREVISUALCOMPOUND_5, M_ENDLAP_6, M_TYREACTUALCOMPOUND_6, M_TYREVISUALCOMPOUND_6, M_ENDLAP_7, M_TYREACTUALCOMPOUND_7, M_TYREVISUALCOMPOUND_7, M_ENDLAP_8, M_TYREACTUALCOMPOUND_8, M_TYREVISUALCOMPOUND_8) values(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :47, :48, :49, :50, :51, :52, :53, :54, :55, :56, :57, :58, :59, :60, :61, :62, :63, :64, :65, :66, :67, :68, :69, :70, :71, :72, :73, :74, :75, :76, :77, :78, :79, :80, :81, :82, :83, :84, :85, :86, :87, :88, :89, :90, :91, :92, :93, :94, :95, :96, :97, :98, :99, :100, :101, :102, :103, :104, :105, :106, :107, :108, :109, :110, :111, :112, :113, :114, :115, :116, :117, :118, :119, :120, :121, :122, :123, :124, :125, :126, :127, :128, :129, :130, :131, :132, :133, :134, :135, :136, :137, :138, :139, :140, :141, :142, :143, :144, :145, :146, :147, :148, :149, :150, :151, :152, :153, :154, :155, :156, :157, :158, :159, :160, :161, :162, :163, :164, :165, :166, :167, :168, :169, :170, :171, :172, :173, :174, :175, :176, :177, :178, :179, :180, :181, :182, :183, :184, :185, :186, :187, :188, :189, :190, :191, :192, :193, :194, :195, :196, :197, :198, :199, :200, :201, :202, :203, :204, :205, :206, :207, :208, :209, :210, :211, :212, :213, :214, :215, :216, :217, :218, :219, :220, :221, :222, :223, :224, :225, :226, :227, :228, :229, :230, :231, :232, :233, :234, :235, :236, :237, :238, :239, :240, :241, :242, :243, :244, :245, :246, :247, :248, :249, :250, :251, :252, :253, :254, :255, :256, :257, :258, :259, :260, :261, :262, :263, :264, :265, :266, :267, :268, :269, :270, :271, :272, :273, :274, :275, :276, :277, :278, :279, :280, :281, :282, :283, :284, :285, :286, :287, :288, :289, :290, :291, :292, :293, :294, :295, :296, :297, :298, :299, :300, :301, :302, :303, :304, :305, :306, :307, :308, :309, :310, :311, :312, :313, :314, :315, :316, :317, :318, :319, :320, :321, :322, :323, :324, :325, :326, :327, :328, :329, :330, :331, :332, :333, :334, :335, :336, :337, :338, :339, :340, :341, :342, :343, :344, :345, :346, :347, :348, :349, :350, :351, :352, :353, :354, :355, :356, :357, :358, :359, :360, :361, :362, :363, :364, :365, :366, :367, :368, :369, :370, :371, :372, :373, :374, :375, :376, :377, :378, :379, :380, :381, :382, :383, :384, :385, :386, :387, :388, :389, :390, :391, :392, :393, :394, :395, :396, :397, :398, :399, :400, :401, :402, :403, :404, :405, :406, :407, :408, :409, :410, :411, :412, :413, :414, :415, :416, :417, :418, :419, :420, :421, :422, :423, :424, :425, :426, :427, :428, :429, :430, :431, :432, :433, :434, :435, :436, :437, :438, :439, :440, :441, :442, :443, :444, :445, :446, :447, :448, :449, :450, :451, :452, :453, :454, :455, :456, :457, :458, :459, :460, :461, :462, :463, :464, :465, :466, :467, :468, :469, :470, :471, :472, :473, :474, :475, :476, :477, :478, :479, :480, :481, :482, :483, :484, :485, :486, :487, :488, :489, :490, :491, :492, :493, :494, :495, :496, :497, :498, :499, :500, :501, :502, :503, :504, :505, :506, :507, :508, :509, :510, :511, :512, :513, :514, :515, :516, :517, :518, :519, :520, :521, :522, :523, :524, :525, :526, :527, :528, :529, :530, :531, :532, :533, :534, :535, :536, :537, :538, :539, :540, :541)",row)
        #print("Packet 11")
        #unpackedd_str = ",".join(map(str,unpacked))
        #return unpacked_str,packet_11_stream_OCID
        return "11"


def get_cursor_by_group(sc, sid, group_name, instance_name):
    print(" Creating a cursor for group {}, instance {}".format(group_name, instance_name))
    cursor_details = oci.streaming.models.CreateGroupCursorDetails(group_name=group_name, instance_name=instance_name,
                                                                   type="LATEST",
                                                                   commit_on_get=True)
    response = sc.create_group_cursor(sid, cursor_details)
    return response.data.value

def simple_message_loop(client, stream_id, initial_cursor,target_cursor):
    cursor = initial_cursor
    total_messages = 0
    while True:
        try:
            get_response = client.get_messages(stream_id, cursor, limit=1000)
        except Exception as e:
            print("in loop: "+e.message)
            if e.message == "The cursor is expired. Create a new one.":
                raise e    
        # No messages to process. return.
        if not get_response.data:
            print("No Data")
            time.sleep(1)
            #return
        else:
        # Process the messages
            total_messages = total_messages+len(get_response.data)
            print(f" Read {len(get_response.data)} messages, {total_messages} Total Messages: {datetime.datetime.now()}")
            for message in get_response.data:
                if message.key is None:
                    key = "Null"
                else:
                    key = b64decode(message.key.encode()).decode()
                    val = b64decode(message.value.encode()) #.decode()
                    row = byteToText(val,target_cursor)
            #print("{}: {}".format(key,row))

        # get_messages is a throttled method; clients should retrieve sufficiently large message
        # batches, as to avoid too many http requests.
        time.sleep(1/7)
        connection.commit()
        # use the next-cursor for iteration
        cursor = get_response.headers["opc-next-cursor"]

#connect to ADW
connection = oracledb.connect(user=un, password=pw, dsn=dsn,
                              config_dir=wallet_dir ,
                              wallet_location=wallet_dir ,
                              wallet_password=wp)
#create cursur for insertion
target_cursor = connection.cursor()

config = oci.config.from_file(ociConfigFilePath, ociProfileName)
stream_client = oci.streaming.StreamClient(config, service_endpoint=ociMessageEndpoint)

# A cursor can be created as part of a consumer group.
# Committed offsets are managed for the group, and partitions
# are dynamically balanced amongst consumers in the group.

rnd_string = ''.join(random.choices(string.ascii_lowercase, k=5))
group_cursor = get_cursor_by_group(stream_client, ociStreamOcid, "group_"+rnd_string, "instance_1")
while True:
    try:
        simple_message_loop(stream_client, ociStreamOcid, group_cursor,target_cursor)
    except Exception as e:
        print("Out of loop: "+e.message)
        time.sleep(1)
        if e.message == "The cursor is expired. Create a new one.":
            print("Creating a new cursor")
            rnd_string = ''.join(random.choices(string.ascii_lowercase, k=5))
            group_cursor = get_cursor_by_group(stream_client, ociStreamOcid, "group_"+rnd_string, "instance_1")
